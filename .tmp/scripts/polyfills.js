"use strict";

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

/*! modernizr 3.3.1 (Custom Build) | MIT *
 * https://modernizr.com/download/?-csstransforms-csstransforms3d-preserve3d-setclasses !*/
!function (e, n, t) {
    function r(e, n) {
        return (typeof e === "undefined" ? "undefined" : _typeof(e)) === n;
    }function s() {
        var e, n, t, s, o, i, a;for (var f in C) {
            if (C.hasOwnProperty(f)) {
                if (e = [], n = C[f], n.name && (e.push(n.name.toLowerCase()), n.options && n.options.aliases && n.options.aliases.length)) for (t = 0; t < n.options.aliases.length; t++) {
                    e.push(n.options.aliases[t].toLowerCase());
                }for (s = r(n.fn, "function") ? n.fn() : n.fn, o = 0; o < e.length; o++) {
                    i = e[o], a = i.split("."), 1 === a.length ? Modernizr[a[0]] = s : (!Modernizr[a[0]] || Modernizr[a[0]] instanceof Boolean || (Modernizr[a[0]] = new Boolean(Modernizr[a[0]])), Modernizr[a[0]][a[1]] = s), y.push((s ? "" : "no-") + a.join("-"));
                }
            }
        }
    }function o(e) {
        var n = x.className,
            t = Modernizr._config.classPrefix || "";if (S && (n = n.baseVal), Modernizr._config.enableJSClass) {
            var r = new RegExp("(^|\\s)" + t + "no-js(\\s|$)");n = n.replace(r, "$1" + t + "js$2");
        }Modernizr._config.enableClasses && (n += " " + t + e.join(" " + t), S ? x.className.baseVal = n : x.className = n);
    }function i() {
        return "function" != typeof n.createElement ? n.createElement(arguments[0]) : S ? n.createElementNS.call(n, "http://www.w3.org/2000/svg", arguments[0]) : n.createElement.apply(n, arguments);
    }function a() {
        var e = n.body;return e || (e = i(S ? "svg" : "body"), e.fake = !0), e;
    }function f(e, t, r, s) {
        var o,
            f,
            l,
            d,
            u = "modernizr",
            p = i("div"),
            c = a();if (parseInt(r, 10)) for (; r--;) {
            l = i("div"), l.id = s ? s[r] : u + (r + 1), p.appendChild(l);
        }return o = i("style"), o.type = "text/css", o.id = "s" + u, (c.fake ? c : p).appendChild(o), c.appendChild(p), o.styleSheet ? o.styleSheet.cssText = e : o.appendChild(n.createTextNode(e)), p.id = u, c.fake && (c.style.background = "", c.style.overflow = "hidden", d = x.style.overflow, x.style.overflow = "hidden", x.appendChild(c)), f = t(p, e), c.fake ? (c.parentNode.removeChild(c), x.style.overflow = d, x.offsetHeight) : p.parentNode.removeChild(p), !!f;
    }function l(e, n) {
        return !!~("" + e).indexOf(n);
    }function d(e) {
        return e.replace(/([a-z])-([a-z])/g, function (e, n, t) {
            return n + t.toUpperCase();
        }).replace(/^-/, "");
    }function u(e, n) {
        return function () {
            return e.apply(n, arguments);
        };
    }function p(e, n, t) {
        var s;for (var o in e) {
            if (e[o] in n) return t === !1 ? e[o] : (s = n[e[o]], r(s, "function") ? u(s, t || n) : s);
        }return !1;
    }function c(e) {
        return e.replace(/([A-Z])/g, function (e, n) {
            return "-" + n.toLowerCase();
        }).replace(/^ms-/, "-ms-");
    }function m(n, r) {
        var s = n.length;if ("CSS" in e && "supports" in e.CSS) {
            for (; s--;) {
                if (e.CSS.supports(c(n[s]), r)) return !0;
            }return !1;
        }if ("CSSSupportsRule" in e) {
            for (var o = []; s--;) {
                o.push("(" + c(n[s]) + ":" + r + ")");
            }return o = o.join(" or "), f("@supports (" + o + ") { #modernizr { position: absolute; } }", function (e) {
                return "absolute" == getComputedStyle(e, null).position;
            });
        }return t;
    }function h(e, n, s, o) {
        function a() {
            u && (delete N.style, delete N.modElem);
        }if (o = r(o, "undefined") ? !1 : o, !r(s, "undefined")) {
            var f = m(e, s);if (!r(f, "undefined")) return f;
        }for (var u, p, c, h, g, v = ["modernizr", "tspan", "samp"]; !N.style && v.length;) {
            u = !0, N.modElem = i(v.shift()), N.style = N.modElem.style;
        }for (c = e.length, p = 0; c > p; p++) {
            if (h = e[p], g = N.style[h], l(h, "-") && (h = d(h)), N.style[h] !== t) {
                if (o || r(s, "undefined")) return a(), "pfx" == n ? h : !0;try {
                    N.style[h] = s;
                } catch (y) {}if (N.style[h] != g) return a(), "pfx" == n ? h : !0;
            }
        }return a(), !1;
    }function g(e, n, t, s, o) {
        var i = e.charAt(0).toUpperCase() + e.slice(1),
            a = (e + " " + k.join(i + " ") + i).split(" ");return r(n, "string") || r(n, "undefined") ? h(a, n, s, o) : (a = (e + " " + z.join(i + " ") + i).split(" "), p(a, n, t));
    }function v(e, n, r) {
        return g(e, t, t, n, r);
    }var y = [],
        C = [],
        w = { _version: "3.3.1", _config: { classPrefix: "", enableClasses: !0, enableJSClass: !0, usePrefixes: !0 }, _q: [], on: function on(e, n) {
            var t = this;setTimeout(function () {
                n(t[e]);
            }, 0);
        }, addTest: function addTest(e, n, t) {
            C.push({ name: e, fn: n, options: t });
        }, addAsyncTest: function addAsyncTest(e) {
            C.push({ name: null, fn: e });
        } },
        Modernizr = function Modernizr() {};Modernizr.prototype = w, Modernizr = new Modernizr();var x = n.documentElement,
        S = "svg" === x.nodeName.toLowerCase(),
        _ = "CSS" in e && "supports" in e.CSS,
        b = "supportsCSS" in e;Modernizr.addTest("supports", _ || b), Modernizr.addTest("preserve3d", function () {
        var e = i("a"),
            n = i("a");e.style.cssText = "display: block; transform-style: preserve-3d; transform-origin: right; transform: rotateY(40deg);", n.style.cssText = "display: block; width: 9px; height: 1px; background: #000; transform-origin: right; transform: rotateY(40deg);", e.appendChild(n), x.appendChild(e);var t = n.getBoundingClientRect();return x.removeChild(e), t.width && t.width < 4;
    });var T = w.testStyles = f,
        P = "Moz O ms Webkit",
        k = w._config.usePrefixes ? P.split(" ") : [];w._cssomPrefixes = k;var z = w._config.usePrefixes ? P.toLowerCase().split(" ") : [];w._domPrefixes = z;var E = { elem: i("modernizr") };Modernizr._q.push(function () {
        delete E.elem;
    });var N = { style: E.elem.style };Modernizr._q.unshift(function () {
        delete N.style;
    }), w.testAllProps = g, w.testAllProps = v, Modernizr.addTest("csstransforms3d", function () {
        var e = !!v("perspective", "1px", !0),
            n = Modernizr._config.usePrefixes;if (e && (!n || "webkitPerspective" in x.style)) {
            var t,
                r = "#modernizr{width:0;height:0}";Modernizr.supports ? t = "@supports (perspective: 1px)" : (t = "@media (transform-3d)", n && (t += ",(-webkit-transform-3d)")), t += "{#modernizr{width:7px;height:18px;margin:0;padding:0;border:0}}", T(r + t, function (n) {
                e = 7 === n.offsetWidth && 18 === n.offsetHeight;
            });
        }return e;
    }), Modernizr.addTest("csstransforms", function () {
        return -1 === navigator.userAgent.indexOf("Android 2.") && v("transform", "scale(1)", !0);
    }), s(), o(y), delete w.addTest, delete w.addAsyncTest;for (var A = 0; A < Modernizr._q.length; A++) {
        Modernizr._q[A]();
    }e.Modernizr = Modernizr;
}(window, document);
(function () {
    var lastTime = 0;
    var vendors = ['ms', 'moz', 'webkit', 'o'];
    for (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {
        window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];
        window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];
    }

    if (!window.requestAnimationFrame) window.requestAnimationFrame = function (callback, element) {
        var currTime = new Date().getTime();
        var timeToCall = Math.max(0, 16 - (currTime - lastTime));
        var id = window.setTimeout(function () {
            callback(currTime + timeToCall);
        }, timeToCall);
        lastTime = currTime + timeToCall;
        return id;
    };

    if (!window.cancelAnimationFrame) window.cancelAnimationFrame = function (id) {
        clearTimeout(id);
    };
})();
//# sourceMappingURL=data:application/json;base64,
